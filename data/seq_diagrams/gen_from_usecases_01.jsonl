{"title": "", "actors": 3, "num_of_participats": 9, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml \"Deliver item to a specific location\"\nactor \"Drone Commander\" as DC\nactor \"Dispatcher\" as D\nactor \"Emergency Responders\" as ER\n\nDC -> D: Activate delivery UAVs\nDC -> D: Select target GPS coordinates\nD -> UAV: Request flight authorization\nD -> Commander: Issue delivery mission command\nUAV -> UAV: Synchronized takeoff\nUAV -> Target: Fly to target destination\nUAV -> Target: Drop item\nUAV -> Altitude: Set safe flying altitude\nUAV -> Home: Set target home coordinates\nUAV -> Target: Fly to target destination\nUAV -> Home: Land\n\nnote right of D: Alternative Steps\nalt\n    D -> D: Generate GPS coordinates\nelse\n    D -> Operator: Provide alternate landing coordinates\nend\n\nnote right of D: Error Steps\nalt\n    D -> Operator: Manually enter GPS coordinates\n    D -> D: Continue with step 3\nend\n@enduml"}
{"title": "Provide surveillance and information about a traffic accident", "actors": 0, "num_of_participats": 6, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle \"Provide surveillance and information about a traffic accident\"\n\nparticipant \"911 Call Operator\"\nparticipant \"Drone Commander\"\nparticipant \"UAVs\"\nparticipant \"Human Operator\"\nparticipant \"DroneResponse\"\nparticipant \"Emergency Responders\"\n\nnote over \"911 Call Operator\": A 911 call is received\n\"911 Call Operator\" -> \"Drone Commander\": An accident report is received.\n\"Drone Commander\" -> \"UAVs\": The route is planned and flight authorization is obtained.\n\"Drone Commander\" -> \"DroneResponse\": The DroneResponse command is issued.\n\nloop Multiple UAVs\n    \"UAVs\" -> \"UAVs\": Perform synchronized takeoff\n    \"UAVs\" -> \"UAVs\": Lease airspace and fly to the accident location\n    \"UAVs\" -> \"UAVs\": Perform image capture and analysis\n    \"UAVs\" -> \"Human Operator\": Inspect video and confirm accident site\nend\n\n\"UAVs\" -> \"DroneResponse\": Send GPS of accident to Emergency Responders\n\n\"DroneResponse\" -> \"Emergency Responders\": Generate route and send info\n\"Emergency Responders\" -> \"UAVs\": Arrive at scene\n\"Drone Commander\" -> \"Drone Commander\": End mission\n@enduml"}
{"title": "", "actors": 2, "num_of_participats": 2, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml \"Structural Fire Fighting\"\n\nactor \"Drone Commander\" as DC\nactor \"Semi-autonomous UAV\" as UAV\n\nDC -> UAV: Firefighters request flight authorization\nUAV -> UAV: Activate and arm\nUAV -> UAV: Perform synchronized takeoff\nUAV -> UAV: Use onboard vision to create initial mapping of the building\nUAV -> UAV: Plan optimized and coordinated surveillance flights\nUAV -> UAV: Lease necessary airspace before each leg of flight\nUAV -> UAV: Perform image capture and analysis using thermal imagery\nUAV -> UAV: Stream and aggregate imagery to create current heatmap\nUAV -> UAV: Repeat steps 4-7 throughout fire event\nUAV -> DC: End mission once fire is under control\n\n@enduml"}
{"title": "Environmental Sampling and Analysis", "actors": 2, "num_of_participats": 4, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle \"Environmental Sampling and Analysis\"\n\nactor \"Environmental Scientist\" as EnvScientist\nactor \"RPIC (Remote Pilot in Command)\" as RPIC\n\nEnvScientist -> RPIC: The UAV operator activates the water sampling mission.\nRPIC -> RPIC: UAVs are activated and armed.\nRPIC -> RPIC: Operators dynamically generate flight routes, including sample collection points for the targeted area.\nRPIC -> DroneResponse: DroneResponse requests and receives flight authorization.\nRPIC -> RPIC: The operator issues a command to start the mission.\nRPIC -> RPIC: UAVs perform synchronized takeoff.\nRPIC -> RPIC: The UAVs fly their assigned routes and collect and analyze samples at their assigned collection points.\nRPIC -> RPIC: When a UAV has completed its collection assignment, it returns home.\nRPIC -> RPIC: The operator removes samples and replaces and/or replenishes onboard sampling supplies.\nRPIC -> RPIC: Steps 4-8 are repeated until all needed samples have been collected.\nRPIC -> \"Drone Commander\": The Drone Commander ends the mission.\n@enduml"}
{"title": "Activate and Arm Sequence Diagram", "actors": 0, "num_of_participats": 5, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle Activate and Arm Sequence Diagram\n\nRPIC -> DroneResponse: Deactivate safety switch\nDroneResponse -> UAV: Issue arming command\nUAV -> UAV: Execute pre-arming tests\nUAV -> UAV: Pass pre-arming tests\nUAV -> UAV: Arm\nUAV --> AutomatedPilot: Notify armed status\nAutomatedPilot --> DroneResponse: Notify armed for flight\n\ngroup Error Handling\n    DroneResponse --> UAV: Issue warning sound\n    UAV -> UAV: Report pre-arming failure reasons\n    RPIC -> UAV: Reactivate safety switch\n    RPIC -> Technicians: Attempt to fix root cause\n    Technicians -> Technicians: Recalibrate UAV\nend\n\n@enduml"}
{"title": "Active Tracking", "actors": 0, "num_of_participats": 2, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle \"Active Tracking\"\n\nparticipant \"Semi-Autonomous UAV\" as UAV\nparticipant \"Mission Commander\" as Commander\n\nUAV -> Commander: The UAV is assigned or assumes the task of tracking a person\n\nactivate UAV\nUAV -> UAV: The UAV positions itself in tracking_position\nUAV -> UAV: The UAV uses image capture and analysis\nUAV -> UAV: The onboard tracker calculates relative position\nUAV -> UAV: Generates velocity vectors\nUAV -> UAV: Sends velocity vector to autopilot\nUAV -> UAV: Repeat steps until stop_tracking command\n\nalt UAV loses track of victim\n    UAV -> UAV: The UAV attempts to re-tag the victim\n    UAV -> UAV: Change altitude and perform localized search\nend\n\ndeactivate UAV\n@enduml"}
{"title": "Generate Flight Routes for Area Coverage", "actors": 1, "num_of_participats": 3, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle \"Generate Flight Routes for Area Coverage\"\n\nactor \"Drone Commander\" as User\nparticipant \"Semi-autonomous UAV\" as UAV\nparticipant DroneResponse\n\nUser -> DroneResponse: A user selects\\nthe feature to mark a region\nUser -> DroneResponse: The user marks\\na polygon shape on the map\nDroneResponse -> DroneResponse: Analyzes shape\\nand size of polygon\nUser -> DroneResponse: The user specifies\\nthe number of UAVs (N)\nDroneResponse -> DroneResponse: Generates efficient set\\nof N flight routes\nDroneResponse -> UAV: Assigns flight routes\nUser -> DroneResponse: The use case ends\\nonce flight routes\\nhave been generated\\nand assigned\n\nnote over DroneResponse: instead of optimizing\\nfor area coverage\nDroneResponse -> DroneResponse: Optimizes flight paths for sampling mission\nUser -> DroneResponse: The user specifies\\nthe number of samples (S)\nDroneResponse -> DroneResponse: Optimizes flight paths\\nfor sampling locations\\nand power consumption\n\nnote over User: search area not covered\\nby displayed map view\nUser -> User: Pans and rescales map\\nto include search area\nUser -> User: Recenters map via GPS\\nto include search area\n\nnote over DroneResponse: polygon infeasible for\\nroute generation \nDroneResponse -> DroneResponse: Rejects polygon\\nif insufficient width\\nor height\nDroneResponse -> DroneResponse: Ignores unsupportable\\nindentations or appendages\n\nnote over User: fewer than N UAVs\\navailable for assignment \nUser -> User: Reduces number of UAVs\\nor activates additional UAVs\n\n@enduml"}
{"title": "", "actors": 1, "num_of_participats": 2, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml \"Collect Environmental Sample\"\n\nactor \"Semi-Autonomous UAV\" as UAV\nparticipant \"Mission Operator\" as Operator\n\n== Main Scenario ==\nUAV -> Operator: The UAV arrives at its designated collection coordinates.\nUAV -> Operator: The UAV positions itself to collect a water sample.\nUAV -> Operator: The UAV uses its onboard vision capabilities to find an unobstructed route to the water.\nUAV -> Operator: The UAV begins its descent while using image capture and analysis.\nUAV -> Operator: The UAV activates its onboard collection device and collects a water sample.\nUAV -> Operator: The UAV lowers its collection apparatus.\nUAV -> Operator: The UAV collects the water sample.\nUAV -> Operator: The UAV stores the water sample for carrying home.\nUAV -> Operator: Steps are repeated until all planned collection points are visited.\nUAV -> Operator: The use case finishes when the UAV commences its flight home.\n\n== Alternative Steps ==\nUAV -> Operator: The UAV is tasked with collecting an air sample instead of a water sample.\nOperator -> UAV: Skip step 2 and continue with step 3.\nUAV -> Operator: The UAV not only collects a sample but also performs onboard analysis.\nUAV -> Operator: The UAV performs onboard analysis of the sample.\nUAV -> Operator: Targeted pollutants are identified in the sample.\nUAV -> Operator: The UAV dynamically plans a new collection route.\nUAV -> Operator: Resume at Step 1 using dynamically planned collection points or preplanned ones.\n\n== Error Steps ==\nUAV -> Operator: Unable to find an unobstructed route to the water.\nOperator -> UAV: Direct UAV to skip the current waypoint.\nOperator -> UAV: Manually identify an unobstructed route to the water.\n\n@enduml"}
{"title": "End Mission Sequence Diagram", "actors": 1, "num_of_participats": 3, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml \"End Mission Sequence Diagram\"\n\ntitle End Mission Sequence Diagram\n\nactor \"Drone Commander\" as DC\nparticipant \"Semi-autonomous UAV\" as UAV\nparticipant \"DroneResponse\" as DR\n\nDC -> DR: Initiate end mission command\nDR -> UAV: Recall UAVs to their home-bases\nloop for each UAV\n    UAV -> UAV: Plan route back to unique home coordinates\n    UAV -> UAV: Lease airspace and await clearance\n    UAV -> UAV: Fly to target waypoint\nend\n\n@enduml"}
{"title": "Image Capture and Analysis", "actors": 3, "num_of_participats": 3, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle \"Image Capture and Analysis\"\n\nactor \"Semi-Autonomous UAV\" as UAV\nactor \"Mission Commander\" as Commander\nactor \"Onboard vision model\" as VisionModel\n\nUAV -> UAV: Activate camera\nUAV -> UAV: Stream imagery\nUAV -> VisionModel: Process imagery\nVisionModel -> UAV: Annotate objects\nUAV -> UAV: Raise event\nUAV --> UAV: Transmit imagery to server\nUAV -> UAV: Repeat steps 2-5\nUAV -> Commander: Raise alert for battery depletion\n\n@enduml"}
{"title": "", "actors": 2, "num_of_participats": 2, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml \"Item Drop Sequence Diagram\"\n\nactor \"Semi-Autonomous UAV\" as UAV\nactor \"Mission Commander\" as Commander\n\nUAV -> Commander: Request to deliver item\nUAV -> UAV: Take-off and fly to coordinates\nUAV -> UAV: Start streaming video\nUAV -> Commander: Display video in UI\nUAV -> UAV: Determine safe drop point\nUAV -> UAV: Position at drop point\nUAV -> Commander: Request permission to drop item\nCommander -> UAV: Give permission\nUAV -> UAV: Lower item\nCommander -> UAV: Confirm item drop\nUAV -> UAV: Move to safe observation point\n\nUAV -> Commander: Error - Mechanism failure\nCommander -> UAV: Manual command attempt\nCommander -> UAV: Recall UAV if failure continues\n\nUAV -> Commander: Error - Unable to find safe drop point\nCommander -> UAV: Manually identify drop point\n\nCommander -> UAV: Error - Refuse to drop at proposed point\nCommander -> UAV: Suggest alternate drop position or abort\n\n@enduml"}
{"title": "", "actors": 1, "num_of_participats": 2, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml \"Lease Airspace for Planned Flight Path\"\n\nactor \"Semi-Autonomous UAV\" as UAV\nparticipant \"Air Traffic Control\" as ATC\n\nUAV -> ATC: Calculate airspace needed\nUAV -> ATC: Request permission to reserve airspace\nATC --> UAV: Determine airspace availability\nATC --> UAV: Reserve airspace\nATC --> UAV: Release previous airspace reservations\nATC --> UAV: Grant exclusive airspace lease\nUAV -> UAV: Complete action\n\n@enduml"}
{"title": "Synchronized Takeoff", "actors": 2, "num_of_participats": 3, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle Synchronized Takeoff\n\nactor \"Semi-Autonomous UAV\" as UAV\nactor \"Drone Commander\" as Commander\n\nUAV -> Commander: start mission command\nnote right: DroneResponse assigns altitude\nCommander -> DroneResponse: assign altitude\nCommander -> UAV: lease airspace\nUAV -> UAV: take off\nUAV --> Commander: ready\nUAV -> UAV: reach waypoints\nUAV --> Commander: confirmation\nUAV -> UAV: descend/ascend to waypoints\nUAV --> Commander: confirmation\n@enduml"}
{"title": "", "actors": 1, "num_of_participats": 5, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml \"Loss of Signal Sequence Diagram\"\n\nactor \"Ground Control System\" as GCS\nparticipant RPIC as RPIC\nparticipant \"Unmanned Aerial Vehicle\" as UAV\nparticipant \"Air Traffic Control\" as ATC\nparticipant DroneResponse as DroneResponse\n\nGCS -> UAV: Loss of Signal event\nactivate UAV\nUAV -> UAV: Activate failsafe mechanism\nUAV -> DroneResponse: Loss of Signal event\nactivate DroneResponse\nDroneResponse --> RPIC: Alert: Loss of Signal\ndeactivate DroneResponse\nUAV -> RPIC: Transition to RTL mode\nRPIC --> UAV: Observes UAV in RTL mode\nUAV --> ATC: Request airspace reservation\nATC --> UAV: Clear to return home\n\n@enduml"}
{"title": "Geofence Incursion Use Case", "actors": 0, "num_of_participats": 6, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle \"Geofence Incursion Use Case\"\n\nRPIC -> DroneResponse: `[APPROACHING_GEOFENCE] alert`\nDroneResponse -> RuntimeMonitoringSystem: Detect approaching geofence\nRuntimeMonitoringSystem -> RuntimeMonitoringSystem: Raise alert\nRuntimeMonitoringSystem -> DroneResponse: Cancel current route\nRuntimeMonitoringSystem -> RPIC: Display geofence warning\nRuntimeMonitoringSystem -> Drone: Reroute UAV or RPIC intervenes\nDrone -> RuntimeMonitoringSystem: Detect `[GEOFENCE_BREACH]`\nDrone -> FailSafe: Activate failsafe mechanism (RTL or land)\nRPIC -> Drone: Maintain visual line of sight\nDrone -> ControlSystem: Suspend/redirect mission\nControlSystem -> Drone: Suspend/redirect mission\n@enduml"}
{"title": "Low Battery Use Case", "actors": 4, "num_of_participats": 10, "repo": "", "diagram_source_url": "", "sequence_diagram": "@startuml\ntitle \"Low Battery Use Case\"\n\nactor \"Ground Control System\" as GCS\nactor \"RPIC\" as RPIC\nactor \"Unmanned Aerial Vehicle\" as UAV\nactor \"Air Traffic Control\" as ATC\n\nRPIC -> DroneResponse: responds to `LOW_BATTERY_THRESHOLD` alarm\nRPIC -> UAV: The UAV is in flight\nUAV -> RuntimeMonitoringSystem: detects low battery event\nRuntimeMonitoringSystem -> UI: raises alert\nRPIC -> UI: notifies RPIC of low battery warning\nUAV -> failsafeMechanism: detects battery level below `CRITICAL_BATTERY_THRESHOLD`\nfailsafeMechanism -> UAV: activates RTL or lands in place\nRPIC -> UAV: observes UAV in RTL state\nUAV -> MissionSuspension: suspends mission if necessary\nUAV -> OtherUAVs: moves other UAVs if needed\n\nUI -> RPIC: RPIC decides to assign new UAV\nRPIC -> DroneResponse: assigns new UAV with task\n\n@enduml"}
