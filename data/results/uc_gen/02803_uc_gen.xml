<useCase id="UC001">
    <name>Execute Security Scan Job</name>
    <actors>
        <actor>User</actor>
        <actor>Scheduler</actor>
        <actor>Product Execution</actor>
        <actor>Product Executor</actor>
        <actor>Analyzer Product Executor</actor>
        <actor>Sereco Product Executor</actor>
        <actor>Product Adapter</actor>
        <actor>Analyzer Product Adapter</actor>
        <actor>Security Product XYZ</actor>
        <actor>SecHub Analyzer</actor>
        <actor>Filesystem</actor>
    </actors>
    <preconditions>
        <precondition>User creates a security scan job with a UUID.</precondition>
        <precondition>User uploads a zip file for the job.</precondition>
        <precondition>User requests the status of the job.</precondition>
    </preconditions>
    <trigger>User marks the job as ready to start.</trigger>
    <mainSequence>
        <step id="S1">User creates a job with a UUID.</step>
        <step id="S2">User uploads a zip file for the job.</step>
        <step id="S3">User requests the status of the job.</step>
        <step id="S4">User marks the job as ready to start.</step>
        <step id="S5">Product Execution triggers the batch job.</step>
        <step id="S6">Analyzer fetches the zip data from storage.</step>
        <step id="S7">Analyzer stores the result in the database.</step>
        <step id="S8">Product Executor calls the Product Adapter.</step>
        <step id="S9">Product Adapter uses Security Product XYZ.</step>
        <step id="S10">Product Execution collects one report using Sereco Product Executor.</step>
        <step id="S11">Product Execution filters the report by given metadata.</step>
        <step id="S12">Scheduler stores the SecHub job report.</step>
        <step id="S13">User requests the status of the job.</step>
        <step id="S14">User fetches the SecHub report.</step>
    </mainSequence>
</useCase>
