<useCase id="burnNotesToLinkedERC20Contract">
  <name>Burn notes to linked ERC20 contract</name>
  <actors>
    <actor>Token Owner</actor>
    <actor>ERC20 Token</actor>
    <actor>zero-knowledge asset</actor>
    <actor>AZTEC Cryptography Engine (ACE)</actor>
    <actor>Note Registry</actor>
  </actors>
  <mainSequence>
    <step id="S1">Token Owner inputNotes</step>
    <step id="S2">Token Owner executes JoinSplitProof passing the inputNotes, [], senderAddress, publicAmount, and tokenOwner</step>
    <step id="S3">Token Owner encodes the proof with assetAddress</step>
    <step id="S4">ACE executes publicApprove for assetAddress, proof.hash, and withdrawalAmount</step>
    <step id="S5">Token Owner constructs proof signatures for assetAddress and InputNotePrivateKey</step>
    <step id="S6">zero-knowledge asset carries out confidentialTransfer with proofData and proofSignatures</step>
    <step id="S7">ACE updates Note Registry with proofId, proofOutput, and assetContractAddress</step>
    <step id="S8">Note Registry updates ERC20 Token, transferring tokenOwner amount</step>
  </mainSequence>
</useCase>
