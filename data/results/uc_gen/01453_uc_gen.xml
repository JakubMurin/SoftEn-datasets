<useCase id="UC1">
    <name>Complete Payment Transaction</name>
    <actors>
        <actor>Faber</actor>
        <actor>Acme</actor>
        <actor>Alice</actor>
        <actor>DiemLedger</actor>
        <actor>FaberIndyWallet</actor>
        <actor>FaberAnonCreds</actor>
        <actor>FaberPythonDiem</actor>
        <actor>FaberMiniWallet</actor>
        <actor>AcmeMiniWallet</actor>
        <actor>AcmePythonDiem</actor>
        <actor>AliceMiniWallet</actor>
        <actor>AlicePythonDiem</actor>
        <actor>AliceAnonCreds</actor>
        <actor>AliceIndyWallet</actor>
    </actors>
    <mainSequence>
        <step id="S1">Faber requests to create Faber DID from FaberIndyWallet</step>
        <step id="S2">FaberAnonCreds creates Faber DID using ED25519</step>
        <step id="S3">FaberAnonCreds stores Faber DID in FaberIndyWallet</step>
        <step id="S4">Faber creates SCHEMA using Faber DID</step>
        <step id="S5">FaberAnonCreds stores SCHEMA in FaberIndyWallet</step>
        <step id="S6">Faber requests to create Diem Identifier and ED25519 keys from FaberPythonDiem</step>
        <step id="S7">FaberMiniWallet stores Diem Identifier</step>
        <step id="S8">Faber publishes identifier to Ledger</step>
        <step id="S9">Acme requests to create Diem Identifier and ED25519 keys from AcmePythonDiem</step>
        <step id="S10">AcmeMiniWallet stores Diem Identifier</step>
        <step id="S11">Acme publishes identifier to Ledger</step>
        <step id="S12">Faber creates payment transaction for Trusted Institution</step>
        <step id="S13">FaberPythonDiem sends payment transaction to ledger with SCHEMA</step>
        <step id="S14">DiemLedger accepts or denies payment</step>
        <step id="S15">Faber pulls SCHEMA from Acme payments on ledger</step>
        <step id="S16">Faber creates CRED_DEF using Faber DID and SCHEMA pulled</step>
        <step id="S17">FaberAnonCreds stores CRED_DEF in FaberIndyWallet</step>
        <step id="S18">FaberPythonDiem sends payment transaction to ledger with CRED_DEF</step>
        <step id="S19">DiemLedger accepts or denies payment</step>
        <step id="S20">Alice creates master secret</step>
        <step id="S21">Faber creates credential offer</step>
        <step id="S22">Faber sends credential offer to Alice</step>
        <step id="S23">Alice creates credential request</step>
        <step id="S24">Alice sends credential request to Faber</step>
        <step id="S25">Faber creates credential with credential attributes</step>
        <step id="S26">Faber sends credential to Alice</step>
        <step id="S27">Alice stores credential in AliceIndyWallet</step>
    </mainSequence>
</useCase>
