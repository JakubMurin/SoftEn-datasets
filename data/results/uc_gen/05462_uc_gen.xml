<useCase id="UC1">
    <name>Rate Book</name>
    <actors>
        <actor>User</actor>
        <actor>gateway</actor>
        <actor>Keycloak</actor>
        <actor>catalog</actor>
        <actor>Postgres</actor>
    </actors>
    <mainSequence>
        <step id="S1">User sends a PUT request to rate a book.</step>
        <step id="S2">Gateway forwards the request to Keycloak to verify the JWT.</step>
        <step id="S3">Keycloak verifies the JWT.</step>
        <step id="S4">If JWT is valid:</step>
        <step id="S5">Gateway forwards the rate request to the catalog service.</step>
        <step id="S6">Catalog service searches for the book in Postgres by ID.</step>
        <step id="S7">If the book exists:</step>
        <step id="S8">Catalog service saves or updates the user's rate for the book in Postgres.</step>
        <step id="S9">Catalog service responds with HttpStatus 200 to the gateway.</step>
        <step id="S10">Gateway responds with HttpStatus 200 to the user.</step>
        <step id="S11">If the book does not exist:</step>
        <step id="S12">Catalog service responds with HttpStatus 404 to the gateway.</step>
        <step id="S13">Gateway responds with HttpStatus 404 to the user.</step>
        <step id="S14">If the JWT is absent:</step>
        <step id="S15">Gateway responds with HttpStatus 401 to the user.</step>
        <step id="S16">If the JWT is not valid:</step>
        <step id="S17">Gateway responds with HttpStatus 403 to the user.</step>
    </mainSequence>
</useCase>
