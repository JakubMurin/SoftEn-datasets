<useCase id="1">
    <name>Lexorank workflows</name>
    
    <actors>
        <actor>user</actor>
        <actor>api</actor>
        <actor>lexorank</actor>
        <actor>storage</actor>
    </actors>
    
    <mainSequence>
        <step id="S1">User shows all rows by sending a request to the API</step>
        <step id="S2">API activates and sends a request to Lexorank to get rows</step>
        <step id="S3">Lexorank retrieves rows and ranks by requesting a snapshot from storage</step>
        <step id="S4">Lexorank returns rows ordered by rank to the API</step>
        
        <step id="S5">User inserts a new row by making an insert request to the API</step>
        <step id="S6">API activates and asks Lexorank to insert the new row at a specific position</step>
        <step id="S7">Lexorank locks the snapshot from storage to process the insertion</step>
        <step id="S8">Lexorank detects and resolves collisions if the proposed rank collides</step>
        <step id="S9">Lexorank inserts the new record to storage</step>
        <step id="S10">Lexorank returns the newly inserted row to the API</step>
        
        <step id="S11">User updates an existing row by sending an update request to the API</step>
        <step id="S12">API activates and requests Lexorank to change the position of the row</step>
        <step id="S13">Lexorank locks the snapshot from storage to proceed with the update</step>
        <step id="S14">Lexorank handles collision if there is a conflict with the proposed rank</step>
        <step id="S15">Lexorank modifies the rank of the row in storage as requested</step>
        <step id="S16">Lexorank returns the updated row information to the API</step>
    </mainSequence>

</useCase>
