<useCase id="UC1">
    <name>Verify Booking by OTP</name>
    <actors>
        <actor>Customer</actor>
        <actor>UI/Interface</actor>
        <actor>BookingRouter</actor>
        <actor>BookingController</actor>
        <actor>BookingRepository</actor>
        <actor>BookingModel</actor>
        <actor>OTPService</actor>
        <actor>Database</actor>
    </actors>
    <preconditions>
        <precondition>Customer requests to verify booking by OTP</precondition>
    </preconditions>
    <mainSequence>
        <step id="S1">Customer requests to verify booking by OTP</step>
        <step id="S2">UI receives the request</step>
        <step id="S3">UI sends GET request to Router for verify-otp endpoint</step>
        <step id="S4">Router routes the request to Controller</step>
        <step id="S5">Controller verifies booking OTP by requesting details from Repository</step>
        <step id="S6">Repository fetches booking details from BookingModel using bookingId</step>
        <step id="S7">BookingModel queries the database for booking details</step>
        <step id="S8">BookingModel returns booking data to Repository</step>
        <step id="S9">Repository retrieves booking data and sends it back to Controller</step>
        <step id="S10">Controller forwards OTP verification request to OTPService</step>
        <step id="S11">OTPService validates the OTP</step>
        <step id="S12">If OTP is valid</step>
        <step id="S13">Controller updates the booking status to "verified"</step>
        <step id="S14">Repository updates the booking status to "verified" in the database</step>
        <step id="S15">Controller response with 200 OK (Booking verified)</step>
        <step id="S16">UI displays success message to Customer (Booking verified)</step>
        <step id="S17">If OTP is invalid</step>
        <step id="S18">Controller returns 400 Bad Request for Invalid OTP</step>
        <step id="S19">UI displays error message to Customer (Invalid OTP)</step>
    </mainSequence>
</useCase>
