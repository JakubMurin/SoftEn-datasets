<useCase id="UC1">
    <name>Upload Video</name>
    <description>As a REST API Client, I want to upload a video to the system.</description>
    <actors>
        <actor>REST API Client</actor>
        <actor>API Gateway (Video Service)</actor>
        <actor>Asynchronous Download Lambda</actor>
        <actor>DynamoDB (Video Metadata)</actor>
        <actor>S3 (Video Storage)</actor>
        <actor>External Video Hosting</actor>
    </actors>
    <preconditions>
        <precondition>The REST API Client has a video URL to upload.</precondition>
    </preconditions>
    <successEndConditions>
        <condition>The video is successfully uploaded and stored in the system.</condition>
    </successEndConditions>
    <failureEndConditions>
        <condition>The video upload process fails due to an error.</condition>
    </failureEndConditions>
    <trigger>POST /video (url)</trigger>
    <mainSequence>
        <step id="S1">The REST API Client sends a POST request to the Video Service with the video URL.</step>
        <step id="S2">The Video Service fetches video information from the External Video Hosting.</step>
        <step id="S3">The Video Service stores the video information in DynamoDB and returns a unique identifier (uuid).</step>
        <step id="S4">The Video Service asynchronously invokes the Download Lambda with video payload and uuid.</step>
        <step id="S5">The Download Lambda updates the video status in DynamoDB to 'downloading'.</step>
        <step id="S6">The Download Lambda downloads the video from the Video Hosting.</step>
        <step id="S7">The Download Lambda uploads the video file to S3.</step>
        <step id="S8">The Download Lambda updates the video status in DynamoDB to 'downloaded'.</step>
    </mainSequence>
</useCase>
