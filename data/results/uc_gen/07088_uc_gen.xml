<useCase id="UC001">
    <name>User Management</name>
    <description>Manage users including creation, retrieval, update, and deletion.</description>
    <actors>
        <actor>Client</actor>
        <actor>UsersController</actor>
        <actor>UsersService</actor>
        <actor>UsersRepository</actor>
        <actor>ProductsRepository</actor>
        <actor>BidsRepository</actor>
        <actor>OrdersRepository</actor>
    </actors>
    <preconditions>
        <precondition>Client initiates user management operations through the system.</precondition>
    </preconditions>
    <mainSequence>
        <step id="S1">Client creates a new user by sending a POST request to UserController.</step>
        <step id="S2">UserController forwards the request to UsersService to create the user.</step>
        <step id="S3">UsersService creates and saves the user in UsersRepository.</step>
        <step id="S4">UsersService returns the created user to UserController.</step>
        <step id="S5">UserController responds to the Client with the created user.</step>
        <step id="S6">Client retrieves all users by sending a GET request to UserController.</step>
        <step id="S7">UserController requests UsersService to find all users.</step>
        <step id="S8">UsersService retrieves all users from UsersRepository.</step>
        <step id="S9">UsersService returns the list of users to UserController.</step>
        <step id="S10">UserController responds to the Client with the list of users.</step>
        <step id="S11">Client retrieves a specific user by sending a GET request with user ID to UserController.</step>
        <step id="S12">UserController requests UsersService to find the user by ID.</step>
        <step id="S13">UsersService retrieves the user from UsersRepository.</step>
        <step id="S14">UsersService returns the user to UserController.</step>
        <step id="S15">UserController responds to the Client with the retrieved user.</step>
        <step id="S16">Client updates a user by sending a PUT request with user ID to UserController.</step>
        <step id="S17">UserController requests UsersService to update the user with the specified ID.</step>
        <step id="S18">UsersService checks if the user exists in UsersRepository.</step>
        <step id="S19">UsersService updates the user if it exists or throws an exception if not found.</step>
        <step id="S20">UserController responds to the Client with the updated user or exception message.</step>
        <step id="S21">Client deletes a user by sending a DELETE request with user ID to UserController.</step>
        <step id="S22">UserController requests UsersService to remove the user by ID.</step>
        <step id="S23">UsersService checks if the user exists in UsersRepository.</step>
        <step id="S24">UsersService handles user removal and related validations/error checks.</step>
        <step id="S25">UsersService successfully removes the user if conditions are met, or throws exceptions if not.</step>
        <step id="S26">UserController responds to the Client with success message or exception regarding user deletion.</step>
    </mainSequence>
</useCase>
