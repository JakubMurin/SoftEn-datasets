<useCase id="UC1">
    <name>Manage Lexorank Workflows</name>
    <actors>
        <actor>user</actor>
        <actor>api</actor>
        <actor>lexorank</actor>
        <actor>storage</actor>
    </actors>
    <mainSequence>
        <step id="S1">User shows all rows by sending a show all request to the API.</step>
        <step id="S2">API receives the show all request and calls lexorank to retrieve rows ordered by rank.</step>
        <step id="S3">Lexorank retrieves a snapshot of rows and ranks from storage.</step>
        <step id="S4">Lexorank returns the snapshot of rows and ranks to the API.</step>
        <step id="S5">API sends the ordered rows to the user.</step>
        <step id="S6">User inserts a new row by sending an insert request to the API.</step>
        <step id="S7">API processes the insert request and calls lexorank to insert the new row.</step>
        <step id="S8">Lexorank locks a snapshot of rows and ranks from storage.</step>
        <step id="S9">Lexorank checks for collisions in proposed rank.</step>
        <step id="S10">If a collision is detected, Lexorank applies updates in cascade.</step>
        <step id="S11">Lexorank inserts the new row into storage.</step>
        <step id="S12">API returns the newly inserted row to the user.</step>
        <step id="S13">User updates an existing row by sending an update request to the API.</step>
        <step id="S14">API processes the update request and calls lexorank to change the row's position.</step>
        <step id="S15">Lexorank locks a snapshot of rows and ranks from storage for the update.</step>
        <step id="S16">Lexorank checks for collisions in proposed rank for the update.</step>
        <step id="S17">If a collision is detected, Lexorank applies updates in cascade for the update.</step>
        <step id="S18">Lexorank changes the rank of the row in storage.</step>
        <step id="S19">API returns the updated row to the user.</step>
    </mainSequence>
</useCase>
