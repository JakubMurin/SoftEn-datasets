<useCase id="UC1">
  <name>Register User</name>
  <actors>
    <actor>User</actor>
    <actor>AccessController</actor>
    <actor>AccessService</actor>
    <actor>bcrypt</actor>
  </actors>
  <preconditions>
    <precondition>User accesses the signup functionality.</precondition>
  </preconditions>
  <mainSequence>
    <step id="S1">User sends POST request to AccessController for signup.</step>
    <step id="S2">AccessController calls AccessService function signUp(req.body).</step>
    <step id="S3">AccessService searches for an existing user by email.</step>
    <step id="S4">AccessService receives foundUser from User.</step>
    <step id="S5">AccessService checks if User already exists.</step>
    <step id="S6">If User already exists then return an error message to User.</step>
    <step id="S7">If User does not exist, generate salt.</step>
    <step id="S8">Get salt from bcrypt.</step>
    <step id="S9">Call bcrypt hash function with password and salt.</step>
    <step id="S10">Get hashed password from bcrypt.</step>
    <step id="S11">Create a new user with email, hashPassword, role.</step>
    <step id="S12">Receive newUser from User creation.</step>
    <step id="S13">Return { user } from AccessService to AccessController.</step>
    <step id="S14">Registered OK message is sent from AccessController to User.</step>
  </mainSequence>
</useCase>
