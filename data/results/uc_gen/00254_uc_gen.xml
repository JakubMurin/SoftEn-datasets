<useCase id="1">
    <name>Exchange Asset</name>
    <description>Manage the exchange of assets between Organization 1 and Organization 2</description>
    <actors>
        <actor>Organization 1 Client</actor>
        <actor>Frontend</actor>
        <actor>Organization 1 Backend</actor>
        <actor>Hyperledger Fabric (HLF) Organization 1 SDK</actor>
        <actor>Hyperledger Fabric (HLF) Organization 1 Peer</actor>
        <actor>Organization 2 Backend</actor>
        <actor>Hyperledger Fabric (HLF) Organization 2 SDK</actor>
        <actor>Hyperledger Fabric (HLF) Organization 2 Peer</actor>
        <actor>Hyperledger Fabric (HLF) Orderer</actor>
    </actors>
    <mainSequence>
        <step id="S1">Organization 1 Client initiates an Exchange assets request</step>
        <step id="S2">Frontend receives the Asset exchange request</step>
        <step id="S3">Organization 1 Backend parses and forwards the exchange request</step>
        <step id="S4">HLF Organization 1 SDK forwards the request to Org1 Peer for endorsement</step>
        <step id="S5">HLF Organization 1 SDK forwards the request to Org2 Peer for endorsement</step>
        <step id="S6">Org1 Peer endorses and generates Read Write set</step>
        <step id="S7">Org2 Peer endorses and generates Read Write set</step>
        <step id="S8">Org1 Peer endorses the transaction</step>
        <step id="S9">Org2 Peer endorses the transaction</step>
        <step id="S10">HLF Organization 1 SDK orders transaction into block</step>
        <step id="S11">HLF Orderer processes and commits the transaction to the ledger for Org1 Peer</step>
        <step id="S12">HLF Orderer processes and commits the transaction to the ledger for Org2 Peer</step>
        <step id="S13">HLF Organization 1 SDK captures commit event received from Org1 Peer</step>
        <step id="S14">HLF Organization 1 SDK captures commit event received from Org2 Peer</step>
        <step id="S15">Organization 1 Backend relays the commit event to the client</step>
        <step id="S16">Frontend informs client about the appropriate status</step>
    </mainSequence>
</useCase>
