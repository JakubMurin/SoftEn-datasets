<useCase id="UC1">
    <name>Process Refund Request</name>
    <actors>
        <actor>Customer</actor>
        <actor>UI/Interface</actor>
        <actor>RefundRouter</actor>
        <actor>RefundController</actor>
        <actor>RefundRepository</actor>
        <actor>Refund Model</actor>
        <actor>CustomerRepository</actor>
        <actor>Database</actor>
        <actor>AdminNotificationService</actor>
    </actors>
    <preconditions>
        <precondition>Customer is logged in and on the refund request page.</precondition>
    </preconditions>
    <successEndConditions>
        <condition>Refund request is successfully submitted and admin is notified.</condition>
    </successEndConditions>
    <trigger>Customer submits a refund request.</trigger>
    <mainSequence>
        <step id="S1">Customer opens the refund request page.</step>
        <step id="S2">UI displays the refund request form to the Customer.</step>
        <step id="S3">Customer submits the refund request with customerId, orderId, reason, and amount.</step>
        <step id="S4">Router receives the request and forwards it to the Controller.</step>
        <step id="S5">Controller creates a new refund request with the provided details.</step>
        <step id="S6">Controller fetches customer details from the CustomerRepository.</step>
        <step id="S7">Controller saves the refund request in the Refund Model and Repository.</step>
        <step id="S8">Controller notifies the AdminNotificationService of the refund request.</step>
        <step id="S9">Router responds with 201 Created status to the UI.</step>
        <step id="S10">UI displays a success message to the Customer.</step>
    </mainSequence>
</useCase>
