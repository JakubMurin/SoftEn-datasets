<useCase id="1">
    <name>Manage Lexorank Workflows</name>
    <actors>
        <actor>User</actor>
        <actor>API</actor>
        <actor>Lexorank</actor>
        <actor>Storage</actor>
    </actors>
    <mainSequence>
        <step id="S1">User shows all rows by making a request through API.</step>
        <step id="S2">API triggers Lexorank to retrieve rows ordered by rank.</step>
        <step id="S3">Lexorank requests a snapshot of rows and ranks from Storage.</step>
        <step id="S4">Storage provides Lexorank with a snapshot of rows and ranks.</step>
        <step id="S5">Lexorank returns the ordered rows to the User through API.</step>
        <step id="S6">User inserts a new row by sending an insert request via API.</step>
        <step id="S7">API instructs Lexorank to insert the new row at a specific position.</step>
        <step id="S8">Lexorank locks a snapshot of rows and ranks from Storage.</step>
        <step id="S9">Lexorank checks for any collisions in proposed rank.</step>
        <step id="S10">If a collision occurs, Lexorank applies updates in cascade.</step>
        <step id="S11">Lexorank inserts the new record into Storage.</step>
        <step id="S12">User receives the newly inserted row from Lexorank through API.</step>
        <step id="S13">User updates an existing row by sending an update request via API.</step>
        <step id="S14">API instructs Lexorank to change the position of the row.</step>
        <step id="S15">Lexorank locks a snapshot of rows and ranks from Storage for the update.</step>
        <step id="S16">Lexorank checks for any collisions in the proposed rank change.</step>
        <step id="S17">If a collision occurs, Lexorank applies updates in cascade.</step>
        <step id="S18">Lexorank changes the rank of the row in Storage.</step>
        <step id="S19">User receives the updated row from Lexorank through API.</step>
    </mainSequence>
</useCase>
