<useCase id="UC1">
    <name>Display Job Openings</name>
    <actors>
        <actor>CustomerManager</actor>
        <actor>PublishJobOpeningUI</actor>
    </actors>
    <mainSequence>
        <step id="S1">CustomerManager asks to display job openings in the results phase</step>
        <step id="S2">PublishJobOpeningUI getsJobOpenings()</step>
        <step id="S3">PublishJobOpeningController getJobOpenings()</step>
        <step id="S4">JobOpeningRepository getJobOpenings()</step>
        <step id="S5">PublishJobOpeningController provides jobOpenings to PublishJobOpeningUI</step>
        <step id="S6">PublishJobOpeningUI displays job Openings</step>
        <step id="S7">CustomerManager selects job opening to publish results</step>
        <step id="S8">PublishJobOpeningUI publishes jobOpening results using PublishJobOpeningController</step>
        <step id="S9">PublishJobOpeningController sends ResultEmailRequest to FollowUpServerProxy</step>
        <step id="S10">FollowUpServerProxy creates a socket</step>
        <step id="S11">FollowUpServerProxy connects the socket</step>
        <step id="S12">FollowUpServerProxy sends request using the socket</step>
        <step id="S13">FollowUpServerProxy writes request to FollowUpServer</step>
        <step id="S14">FollowUpServer parses the request using FollowUpMessageParser</step>
        <step id="S15">FollowUpMessageParser creates ResultEmailRequest</step>
        <step id="S16">ResultEmailRequest is executed by FollowUpServer</step>
        <step id="S17">ResultEmailRequest selects candidates using CandidateSelectionService</step>
        <step id="S18">CandidateSelectionService returns lists of selected and rejected candidates to ResultEmailRequest</step>
        <step id="S19">ResultEmailRequest sends emails to selected candidates using EmailService</step>
        <step id="S20">EmailService creates a Notification</step>
        <step id="S21">NotificationRepository saves the notification</step>
        <step id="S22">EmailService sends the notification to ResultEmailRequest</step>
        <step id="S23">ResultEmailRequest confirms emails sent and sends response back to FollowUpServer</step>
        <step id="S24">FollowUpServer writes response to the socket</step>
        <step id="S25">Socket receives the response</step>
        <step id="S26">FollowUpServer closes the connection with the socket</step>
        <step id="S27">Socket sends the response to FollowUpServerProxy</step>
        <step id="S28">FollowUpServerProxy provides response to PublishJobOpeningController</step>
        <step id="S29">PublishJobOpeningController sends response to PublishJobOpeningUI</step>
        <step id="S30">PublishJobOpeningUI confirms successful operation</step>
    </mainSequence>
</useCase>
