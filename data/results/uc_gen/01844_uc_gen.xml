<useCase id="UC-001">
    <name>Delete Account</name>
    <actors>
        <actor>User</actor>
        <actor>API_Controller</actor>
        <actor>Service_Layer</actor>
        <actor>Repository</actor>
        <actor>Logging_Service</actor>
        <actor>Unit_of_Work</actor>
    </actors>
    <preconditions>
        <precondition>The User wants to delete their account.</precondition>
    </preconditions>
    <mainSequence>
        <step id="S1">User sends a request to delete their account through API_Controller.</step>
        <step id="S2">API_Controller validates the Email and Token.</step>
        <step id="S3">If Email or Token is missing, API_Controller responds with a 400 Bad Request to the User.</step>
        <step id="S4">If both Email and Token are valid, Service_Layer validates the deletion token asynchronously.</step>
        <step id="S5">Service_Layer retrieves the User by email asynchronously from Repository.</step>
        <step id="S6">If User is not found, an exception is sent back to API_Controller.</step>
        <step id="S7">If User is found, Service_Layer validates the token.</step>
        <step id="S8">If token is invalid, an exception is sent back to API_Controller.</step>
        <step id="S9">If token is valid, Service_Layer initiates the deletion process asynchronously.</step>
        <step id="S10">Service_Layer retrieves the User by email asynchronously from Repository for deletion.</step>
        <step id="S11">Service_Layer removes the User from the Repository.</step>
        <step id="S12">Logging_Service logs the account deletion activity.</step>
        <step id="S13">Unit_of_Work commits the transaction.</step>
        <step id="S14">API_Controller returns a SystemUserDto after successful deletion to the User.</step>
        <step id="S15">API_Controller responds to the User with a 200 OK status and success message.</step>
    </mainSequence>
</useCase>
