<useCase id="UC1">
    <name>Handle Ball Collision</name>
    <actors>
        <actor>GameEngine</actor>
    </actors>
    <mainSequence>
        <step id="S1">GameEngine requests the boundary from the GameBoundaryDelegate.</step>
        <step id="S2">GameBoundaryDelegate activates to get the boundary.</step>
        <step id="S3">GameBoundaryDelegate requests the boundary from the Boundary.</step>
        <step id="S4">Boundary activates to return the boundary.</step>
        <step id="S5">Boundary returns the boundary to the GameBoundaryDelegate.</step>
        <step id="S6">GameBoundaryDelegate returns the boundary to the GameEngine.</step>
        <step id="S7">GameEngine calls onCollision method on Ball with boundary and deltaTime.</step>
        <step id="S8">Ball activates to handle the collision.</step>
        <step id="S9">Ball checks if it will collide with the boundary.</step>
        <step id="S10">Ball activates to handle the collision with the boundary.</step>
        <step id="S11">Ball calls onCollision method on itself with the boundary.</step>
        <step id="S12">Ball activates to handle the collision with the boundary.</step>
        <step id="S13">Ball gets the safe position from the boundary.</step>
        <step id="S14">Ball calls onCollision method on FreeBody with collisionPoint, deltaTime, and restitutionCoefficient.</step>
        <step id="S15">Ball deactivates after handling the collision.</step>
        <step id="S16">GameEngine returns the newBall after collision handling.</step>
    </mainSequence>
</useCase>
