<useCase id="UC1">
    <name>Display Job Openings</name>
    <actors>
        <actor>CustomerManager</actor>
        <actor>PublishJobOpeningUI</actor>
    </actors>
    <mainSequence>
        <step id="S1">CustomerManager asks PublishJobOpeningUI to display job openings in the results phase.</step>
        <step id="S2">PublishJobOpeningUI gets job openings.</step>
        <step id="S3">PublishJobOpeningController gets job openings.</step>
        <step id="S4">JobOpeningRepository retrieves job openings.</step>
        <step id="S5">JobOpeningRepository sends job openings to PublishJobOpeningController.</step>
        <step id="S6">PublishJobOpeningController sends job openings to PublishJobOpeningUI.</step>
        <step id="S7">PublishJobOpeningUI displays job openings.</step>
        <step id="S8">CustomerManager selects a job opening to publish results.</step>
        <step id="S9">PublishJobOpeningUI calls PublishJobOpeningController to publish job opening results.</step>
        <step id="S10">PublishJobOpeningController sends a result email request to FollowUpServerProxy.</step>
        <step id="S11">FollowUpServerProxy creates and connects a client socket.</step>
        <step id="S12">FollowUpServerProxy sends a request through the socket.</step>
        <step id="S13">ClientSocket writes the request.</step>
        <step id="S14">FollowUpServer writes the request and parses it using FollowUpMessageParser.</step>
        <step id="S15">FollowUpMessageParser creates a ResultEmailRequest.</step>
        <step id="S16">ResultEmailRequest is executed.</step>
        <step id="S17">ResultEmailRequest selects candidates for the job opening.</step>
        <step id="S18">ResultEmailRequest sends emails to selected candidates using EmailService.</step>
        <step id="S19">EmailService creates a notification and saves it in NotificationRepository.</step>
        <step id="S20">NotificationRepository saves the notification and sends it back to EmailService.</step>
        <step id="S21">EmailService sends the notification to ResultEmailRequest.</step>
        <step id="S22">ResultEmailRequest confirms that emails are sent.</step>
        <step id="S23">FollowUpServer writes a response through the socket.</step>
        <step id="S24">ClientSocket receives the response.</step>
        <step id="S25">FollowUpServer closes the connection.</step>
        <step id="S26">FollowUpServerProxy receives the response and sends it to PublishJobOpeningController.</step>
        <step id="S27">PublishJobOpeningController sends the response to PublishJobOpeningUI.</step>
        <step id="S28">PublishJobOpeningUI confirms the success of the operation to CustomerManager.</step>
    </mainSequence>
</useCase>
