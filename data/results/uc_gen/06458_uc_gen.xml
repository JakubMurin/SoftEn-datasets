<useCase id="1">
    <name>Main Functionality</name>
    <actors>
        <actor>User</actor>
        <actor>Main</actor>
        <actor>Company</actor>
        <actor>HR</actor>
        <actor>IT</actor>
        <actor>Development</actor>
        <actor>QA</actor>
        <actor>Employee1</actor>
        <actor>Employee2</actor>
        <actor>Employee3</actor>
        <actor>Employee4</actor>
        <actor>Employee5</actor>
        <actor>Employee6</actor>
    </actors>
    <mainSequence>
        <step id="S1">User launches the main()</step>
        <step id="S2">Main invokes runDepartments()</step>
        <step id="S3">Main creates a new DepartmentComposite named "Company"</step>
        <step id="S4">Main creates a new DepartmentComposite named "HR"</step>
        <step id="S5">Main creates new EmployeeLeaf with salary 1000</step>
        <step id="S6">Main creates new EmployeeLeaf with salary 1000</step>
        <step id="S7">HR adds Employee1</step>
        <step id="S8">HR adds Employee2</step>
        <step id="S9">Company adds HR</step>
        <step id="S10">Main creates a new DepartmentComposite named "IT"</step>
        <step id="S11">Main creates a new DepartmentComposite named "Development"</step>
        <step id="S12">Main creates new EmployeeLeaf with salary 2000</step>
        <step id="S13">Main creates new EmployeeLeaf with salary 2000</step>
        <step id="S14">Development adds Employee3</step>
        <step id="S15">Development adds Employee4</step>
        <step id="S16">IT adds Development</step>
        <step id="S17">Main creates a new DepartmentComposite named "Quality Assurance"</step>
        <step id="S18">Main creates new EmployeeLeaf with salary 1500</step>
        <step id="S19">Main creates new EmployeeLeaf with salary 1500</step>
        <step id="S20">QA adds Employee5</step>
        <step id="S21">QA adds Employee6</step>
        <step id="S22">IT adds QA</step>
        <step id="S23">Company adds IT</step>
        <step id="S24">Main prints "Company: " + company.getName()</step>
        <step id="S25">Company retrieves its name</step>
        <step id="S26">Main prints "Company budget: " + company.getBudget()</step>
        <step id="S27">Company retrieves its budget</step>
        <step id="S28">HR retrieves its budget</step>
        <step id="S29">Employee1 retrieves its budget</step>
        <step id="S30">Employee2 retrieves its budget</step>
        <step id="S31">Company gets total budget from HR</step>
        <step id="S32">IT retrieves its budget</step>
        <step id="S33">Development retrieves its budget</step>
        <step id="S34">Employee3 retrieves its budget</step>
        <step id="S35">Employee4 retrieves its budget</step>
        <step id="S36">Development gets total budget from Employee3 and Employee4</step>
        <step id="S37">QA retrieves its budget</step>
        <step id="S38">Employee5 retrieves its budget</step>
        <step id="S39">Employee6 retrieves its budget</step>
        <step id="S40">QA gets total budget from Employee5 and Employee6</step>
        <step id="S41">IT gets total budget from QA</step>
        <step id="S42">Company gets total budget from IT</step>
        <step id="S43">Main prints "Company workers: " + company.countOfWorkers()</step>
        <step id="S44">Company retrieves its number of workers</step>
        <step id="S45">HR retrieves its number of workers</step>
        <step id="S46">Employee1 retrieves its number of workers</step>
        <step id="S47">Employee2 retrieves its number of workers</step>
        <step id="S48">HR gets total number of workers from Employee1 and Employee2</step>
        <step id="S49">IT retrieves its number of workers</step>
        <step id="S50">Development retrieves its number of workers</step>
        <step id="S51">Employee3 retrieves its number of workers</step>
        <step id="S52">Employee4 retrieves its number of workers</step>
        <step id="S53">Development gets total number of workers from Employee3 and Employee4</step>
        <step id="S54">QA retrieves its number of workers</step>
        <step id="S55">Employee5 retrieves its number of workers</step>
        <step id="S56">Employee6 retrieves its number of workers</step>
        <step id="S57">QA gets total number of workers from Employee5 and Employee6</step>
        <step id="S58">IT gets total number of workers from QA</step>
        <step id="S59">Company gets total number of workers from IT</step>
    </mainSequence>
</useCase>
