@startuml
actor PSU
entity TPP
entity XS2A
entity CMS
entity SPI
entity ASPSP
== Payment Initiation with Embedded approach explicit authorisation mode==

PSU->TPP: Initiate payment

activate TPP
TPP -> XS2A: REST Call Initiate payment\nPOST "/v1/payments/{payment-product}"
activate XS2A
XS2A->SPI: Java Call SPIinitiatePayment
activate SPI
|||
SPI-->XS2A: SpiSinglePaymentInitiationResponse
deactivate SPI
XS2A->CMS: Save payment
|||
XS2A-->TPP:Payment initiation response
|||
TPP->XS2A: REST Call Start authorisation\nPOST"/v1/{payment-service }/{payment-product}/\n{paymentId}/authorisations"
note left
         in case of Multilevel SCA
         the authorisation steps
         should be repeated for each PSU
end note
|||
XS2A->SPI: Start authorisation request \n(payment, Authorisation ID, SCA status, resolved SCA approach)
activate SPI
SPI->ASPSP: Authorisation request
activate ASPSP
ASPSP-->SPI: Authorisation response \n(chosen SCA approach, PSU message, SCA status)
deactivate ASPSP
SPI-->XS2A: Start Authorisation response
deactivate SPI
XS2A->CMS: Save Authorisation
XS2A-->TPP:Start authorisation response\n"link_updatePsuWithAuthentication"
deactivate XS2A
|||
TPP-->PSU: Feedback to the customer\n"Please enter your User-id & password"
deactivate TPP
activate PSU
|||
PSU->TPP: PSU provide User-id & password
deactivate PSU
activate TPP
|||
TPP->XS2A: REST Call Update PSU data (Authentication)\n"PUT/v1/{payment-service}/{payment-id}/\n{payment-product}/authorisations/{authorisationId}"
deactivate TPP
activate XS2A
|||
XS2A->SPI: Java Call PaymentAuthorisationSpi
activate SPI
|||
SPI->ASPSP: AuthorisedPsu
activate ASPSP
|||
ASPSP-->SPI: AuthorisedPsu Response
deactivate ASPSP
|||
SPI-->XS2A: SpiPsuAuthorisationResponse\nStatus with scaExempted (TRUE or FALSE)
|||
XS2A->SPI: Java Call PaymentAuthorisationSpi
|||
SPI-->XS2A: List "SpiAvailableScaMethodsResponse"\nwith scaExempted (TRUE or FALSE)
deactivate SPI
|||
XS2A->CMS: REST Call UpdatePisAuthorisation
activate CMS
|||
CMS-->XS2A: UpdatePisAuthorisation Response
deactivate CMS
|||
XS2A->TPP: UpdatePsuAuthenticationResponse
deactivate XS2A
activate TPP
|||
TPP-->PSU: Feedback to the customer\n"Please select SCA method"
activate PSU
|||
PSU->TPP: SCA Method
|||
TPP->XS2A: REST Call Update Psu data(Select Authentication Method)\n"PUT/v1/{payment-service}/{payment-id}/\n{payment-product}/authorisations/{authorisationId}"
activate XS2A
|||
XS2A->SPI: Java Call PaymentAuthorisationSpi
activate SPI
|||
SPI->ASPSP: SelectScaMethod
activate ASPSP
|||
ASPSP-->PSU: ScaAuthenticationData
|||
ASPSP-->SPI: SelectScaMethod Respons
deactivate ASPSP
|||
SPI-->XS2A: SpiAuthorisationCodeResult\nwith scaExempted (TRUE or FALSE)
deactivate SPI
|||
XS2A->CMS: REST Call UpdatePisAuthorisation
activate CMS
|||
CMS-->XS2A: UpdatePisAuthorisation Response
deactivate CMS
|||
XS2A-->TPP:UpdatePsuAuthenticationResponse
deactivate XS2A
|||
PSU->TPP: Provide Authentication Data
|||
TPP->XS2A: REST Call Transaction Authorisation\n"PUT/v1/{payment-service}/{payment-id}/\n{payment-product}/authorisations/{authorisationId}"
deactivate TPP
activate XS2A
|||
XS2A->SPI: Java Call SinglePaymentSpi
activate SPI
|||
SPI-->ASPSP: Authorised Payment
activate ASPSP
|||
ASPSP-->SPI: Authorised Payment Response
deactivate ASPSP
|||
SPI-->XS2A: SpiPaymentExecution Response
deactivate SPI
|||
XS2A->CMS: REST Call UpdatePisAuthorisation
activate CMS
|||
CMS-->XS2A: UpdatePisAuthorisation Response
deactivate CMS
|||
XS2A-->TPP: Transaction Authorisation Response
deactivate XS2A
activate TPP
|||
TPP-->PSU: Feedback to the customer:\n"Payment Authorised"
deactivate PSU
|||
TPP->XS2A: REST Call get payment status\n"GET/v1/{payment-service}/{paymentId}/status"
activate XS2A
XS2A->CMS: REST Call GetPaymentById
activate CMS
|||
CMS-->XS2A: Payment Object Response
deactivate CMS
|||
XS2A->SPI: Java Call SPI GetPaymentStatusByid
activate SPI
|||
SPI->ASPSP: GetPaymentStatusById
activate ASPSP
|||
ASPSP-->SPI: Transaction Status Response
deactivate ASPSP
|||
SPI-->XS2A: Transaction Status Response
deactivate SPI
|||
XS2A->CMS: REST Call UpdateTransactionStatus
activate CMS
|||
CMS-->XS2A: UpdateTransactionStatus Response
deactivate CMS
|||
XS2A-->TPP: Transaction Status Response
|||
TPP->XS2A: REST Call Get Payment Request\n"GET/v1/{payment-service}/{paymentId}"
|||
XS2A->CMS: REST Call GetPaymentById
activate CMS
|||
CMS-->XS2A: Payment Object Response
deactivate CMS
|||
XS2A->SPI: Java Call SpiGetPaymentbyId
activate SPI
|||
SPI->ASPSP: GetPaymentById
activate ASPSP
|||
ASPSP-->SPI: Payment Object Response
deactivate ASPSP
|||
SPI-->XS2A: SpiSinglePayment /\nSpiPeriodicPayment /\nSpiBulkPayment /\nSpiPaymentInfo            Response
deactivate SPI
|||
XS2A->CMS: REST Call UpdatePayment
activate CMS
|||
CMS-->XS2A: UpdatePayment Response
deactivate CMS
|||
XS2A-->TPP: GetPayment Response
|||
TPP->XS2A: REST Call Get Authorisation Sub-resources\n"GET/v1/{payment-service}/{payment-product}\n/{paymentId/authorisations}"
|||
XS2A->CMS: GetAuthorisationsByPaymentId
activate CMS
|||
CMS-->XS2A: GetAuthorisationsByPaymentId Response
deactivate CMS
XS2A-->TPP: AuthorisationByPaymentIdsList Response
|||
TPP->XS2A: REST Call Get Sca Status Request\n"GET/v1/{payment-service}/{payment-product}/\n{paymentId/authorisations}/{authorithationId}"
|||
XS2A->CMS: REST Call getPaymentInitiationAuthorisationScaStatus
activate CMS
|||
CMS-->XS2A: getPaymentInitiationAuthorisationScaStatus Response
deactivate CMS
|||
XS2A->SPI: Java Call getScaStatus
activate SPI
|||
SPI->ASPSP: getScaStatus
activate ASPSP
|||
ASPSP-->SPI: getScaStatus Response
deactivate ASPSP
SPI->XS2A: SpiScaStatusResponse
deactivate SPI
|||
XS2A->CMS: REST Call UpdateAuthorisationStatus
activate CMS
|||
CMS-->XS2A: UpdateAuthorisationStatus Response
|||
deactivate CMS
|||
XS2A-->TPP: Get Sca Status Response
deactivate TPP
deactivate XS2A
@enduml

