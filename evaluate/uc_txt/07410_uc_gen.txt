1. User sends a POST request to create a new Tenant.
2. TenantsController validates the request.
3. TenantsController checks if the Tenant already exists.
4. TenantService validates the model.
5. TenantService checks if the Tenant exists in the database.
6. Tenant does not exist in the database.
7. TenantService creates a new Tenant.
8. TenantService inserts the new Tenant into the database.
9. TenantService saves changes in the database.
10. Isolated is set to true.
11. TenantService gets the connection string.
12. TenantService gets the ApplicationDbContext instance.
13. ApplicationDbContext resolves the instance.
14. ApplicationDbContext sets the connection string.
15. ApplicationDbContext checks for pending migrations.
16. ApplicationDbContext applies migrations.
17. ITenantContextService updates the Tenant context.
18. ITenantContextService sets the Tenant asynchronously.
19. TenantService returns the created Tenant.
20. Tenant already exists in the database.
21. TenantService returns an error message indicating that the Tenant already exists.
22. TenantsController sends a 201 Created response indicating that the Tenant has been created.
