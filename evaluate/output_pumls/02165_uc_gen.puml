@startuml
actor user
actor caller
actor ads_controller
actor user_clicks
participant bookcontroller
activate bookcontroller
participant remove_book_option
bookcontroller -> remove_book_option: select()
activate remove_book_option
deactivate remove_book_option
participant request_to_bookcontroller_delete_book_with_specified_id
bookcontroller -> request_to_bookcontroller_delete_book_with_specified_id: send()
activate request_to_bookcontroller_delete_book_with_specified_id
deactivate request_to_bookcontroller_delete_book_with_specified_id
participant bookservice_delete_book_with_provided_id
bookcontroller -> bookservice_delete_book_with_provided_id: call()
activate bookservice_delete_book_with_provided_id
deactivate bookservice_delete_book_with_provided_id
participant bookdb_delete_book_using_provided_book_id
bookcontroller -> bookdb_delete_book_using_provided_book_id: query()
activate bookdb_delete_book_using_provided_book_id
deactivate bookdb_delete_book_using_provided_book_id
participant book_deletion_to_bookservice
bookcontroller -> book_deletion_to_bookservice: confirm()
activate book_deletion_to_bookservice
deactivate book_deletion_to_bookservice
participant bookcontroller_about_successful_deletion
bookcontroller -> bookcontroller_about_successful_deletion: notify()
activate bookcontroller_about_successful_deletion
deactivate bookcontroller_about_successful_deletion
participant success_message_through_ui
bookcontroller -> success_message_through_ui: display()
activate success_message_through_ui
deactivate success_message_through_ui
participant message_to_staff_confirming_book_successfully_deleted
bookcontroller -> message_to_staff_confirming_book_successfully_deleted: show()
activate message_to_staff_confirming_book_successfully_deleted
deactivate message_to_staff_confirming_book_successfully_deleted
@enduml
